SQL> 
SQL> -- Generated by Oracle SQL Developer Data Modeler 18.2.0.179.0806
SQL> --   at:        2019-04-25 12:29:43 AEST
SQL> --   site:      Oracle Database 11g
SQL> --   type:      Oracle Database 11g
SQL> 
SQL> 
SQL> --Anisha Shrestha :29389356
SQL> --Nayanatara Samarasekera: 28302753
SQL> 
SQL> --Adding drop sequences 
SQL> 
SQL> DROP SEQUENCE cust_id_sequence;

Sequence CUST_ID_SEQUENCE dropped.

SQL> 
SQL> DROP SEQUENCE drone_id_sequence;

Sequence DRONE_ID_SEQUENCE dropped.

SQL> 
SQL> DROP SEQUENCE emp_id_sequence;

Sequence EMP_ID_SEQUENCE dropped.

SQL> 
SQL> DROP SEQUENCE loan_id_sequence;

Sequence LOAN_ID_SEQUENCE dropped.

SQL> 
SQL> DROP SEQUENCE order_id_sequence;

Sequence ORDER_ID_SEQUENCE dropped.

SQL> 
SQL> DROP SEQUENCE pay_id_sequence;

Sequence PAY_ID_SEQUENCE dropped.

SQL> 
SQL> DROP SEQUENCE supplier_id_sequence;

Sequence SUPPLIER_ID_SEQUENCE dropped.

SQL> 
SQL> DROP SEQUENCE training_id_sequence;

Sequence TRAINING_ID_SEQUENCE dropped.

SQL> 
SQL> 
SQL> DROP TABLE business CASCADE CONSTRAINTS;

Table BUSINESS dropped.

SQL> 
SQL> DROP TABLE customer CASCADE CONSTRAINTS;

Table CUSTOMER dropped.

SQL> 
SQL> DROP TABLE drone CASCADE CONSTRAINTS;

Table DRONE dropped.

SQL> 
SQL> DROP TABLE drone_for_rent CASCADE CONSTRAINTS;

Table DRONE_FOR_RENT dropped.

SQL> 
SQL> DROP TABLE drone_for_sale CASCADE CONSTRAINTS;

Table DRONE_FOR_SALE dropped.

SQL> 
SQL> DROP TABLE employee CASCADE CONSTRAINTS;

Table EMPLOYEE dropped.

SQL> 
SQL> DROP TABLE individual CASCADE CONSTRAINTS;

Table INDIVIDUAL dropped.

SQL> 
SQL> DROP TABLE loan CASCADE CONSTRAINTS;

Table LOAN dropped.

SQL> 
SQL> DROP TABLE loan_line CASCADE CONSTRAINTS;

Table LOAN_LINE dropped.

SQL> 
SQL> DROP TABLE order_line CASCADE CONSTRAINTS;

Table ORDER_LINE dropped.

SQL> 
SQL> DROP TABLE orders CASCADE CONSTRAINTS;

Table ORDERS dropped.

SQL> 
SQL> DROP TABLE payment_instalment CASCADE CONSTRAINTS;

Table PAYMENT_INSTALMENT dropped.

SQL> 
SQL> DROP TABLE supplier CASCADE CONSTRAINTS;

Table SUPPLIER dropped.

SQL> 
SQL> DROP TABLE training_activity CASCADE CONSTRAINTS;

Table TRAINING_ACTIVITY dropped.

SQL> 
SQL> CREATE TABLE business (
  2      cust_id       NUMBER(7) NOT NULL,
  3      cust_abm_no   NUMBER(10) NOT NULL,
  4      cust_fax_no   CHAR(11) NOT NULL
  5  );

Table BUSINESS created.

SQL> 
SQL> COMMENT ON COLUMN business.cust_id IS
  2      'unique identifier for a customer.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN business.cust_abm_no IS
  2      'ABM number of the customer';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN business.cust_fax_no IS
  2      'Fax number of a customer. ';

Comment created.

SQL> 
SQL> ALTER TABLE business ADD CONSTRAINT business_pk PRIMARY KEY ( cust_id );

Table BUSINESS altered.

SQL> 
SQL> CREATE TABLE customer (
  2      cust_id           NUMBER(7) NOT NULL,
  3      cust_address      VARCHAR2(150) NOT NULL,
  4      cust_email        VARCHAR2(50) NOT NULL,
  5      cust_contact_no   CHAR(10) NOT NULL,
  6      cust_type         CHAR(1) NOT NULL
  7  );

Table CUSTOMER created.

SQL> 
SQL> ALTER TABLE customer
  2      ADD CONSTRAINT cust_type_constraints CHECK ( cust_type IN (
  3          'B',
  4          'I'
  5      ) );

Table CUSTOMER altered.

SQL> 
SQL> COMMENT ON COLUMN customer.cust_id IS
  2      'unique identifier for a customer.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN customer.cust_address IS
  2      'The address of the customer.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN customer.cust_email IS
  2      'Email address of a customer.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN customer.cust_contact_no IS
  2      'Mobile number of a customer.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN customer.cust_type IS
  2      'Cutomer type - Individual or Bussiness, I/B respectively. ';

Comment created.

SQL> 
SQL> ALTER TABLE customer ADD CONSTRAINT customer_pk PRIMARY KEY ( cust_id );

Table CUSTOMER altered.

SQL> 
SQL> CREATE TABLE drone (
  2      drone_id           NUMBER(7) NOT NULL,
  3      platform           VARCHAR2(50) NOT NULL,
  4      range              NUMBER(7,2) NOT NULL,
  5      manufacture_date   DATE NOT NULL,
  6      rpl_required       CHAR(1) NOT NULL,
  7      drone_for_rent     CHAR(1) NOT NULL,
  8      drone_for_sale     CHAR(1) NOT NULL,
  9      supplier_id        NUMBER NOT NULL
 10  );

Table DRONE created.

SQL> 
SQL> ALTER TABLE drone
  2      ADD CONSTRAINT rpl_required_constraint CHECK ( rpl_required IN (
  3          'N',
  4          'Y'
  5      ) );

Table DRONE altered.

SQL> 
SQL> ALTER TABLE drone
  2      ADD CONSTRAINT drone_for_rent_constraint CHECK ( drone_for_rent IN (
  3          'N',
  4          'Y'
  5      ) );

Table DRONE altered.

SQL> 
SQL> ALTER TABLE drone
  2      ADD CONSTRAINT drone_for_sale_constraing CHECK ( drone_for_sale IN (
  3          'N',
  4          'Y'
  5      ) );

Table DRONE altered.

SQL> 
SQL> COMMENT ON COLUMN drone.drone_id IS
  2      'Drone ID idetifies a unique drone.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN drone.platform IS
  2      'platform used by the drones. ';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN drone.range IS
  2      'Range is the flying distance capacity of a dorne in meters. ';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN drone.manufacture_date IS
  2      'Manufacture date of the drone. ';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN drone.rpl_required IS
  2      'If Remote Pilot Licence (RPL) is required for the drone (Y/S).';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN drone.drone_for_rent IS
  2      'If the drone is for rent (Y/N)';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN drone.drone_for_sale IS
  2      'If the drone is for sale (Y/N).';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN drone.supplier_id IS
  2      'Supplier''s ID';

Comment created.

SQL> 
SQL> ALTER TABLE drone ADD CONSTRAINT drone_pk PRIMARY KEY ( drone_id );

Table DRONE altered.

SQL> 
SQL> CREATE TABLE drone_for_rent (
  2      drone_id            NUMBER(7) NOT NULL,
  3      rental_hour_rate    NUMBER(7,2) NOT NULL,
  4      late_penalty_rate   NUMBER(7,2) NOT NULL
  5  );

Table DRONE_FOR_RENT created.

SQL> 
SQL> COMMENT ON COLUMN drone_for_rent.drone_id IS
  2      'Drone ID idetifies a unique drone.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN drone_for_rent.rental_hour_rate IS
  2      'Rental hourly rate for a drone';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN drone_for_rent.late_penalty_rate IS
  2      'Late penalty rate is charged to customers when they return the drone after the expected date and return time. '
  3  ;

Comment created.

SQL> 
SQL> ALTER TABLE drone_for_rent ADD CONSTRAINT drone_for_rent_pk PRIMARY KEY ( drone_id
  2  );

Table DRONE_FOR_RENT altered.

SQL> 
SQL> CREATE TABLE drone_for_sale (
  2      drone_id          NUMBER(7) NOT NULL,
  3      warranty_period   NUMBER(1) NOT NULL,
  4      selling_price     NUMBER(7,2) NOT NULL
  5  );

Table DRONE_FOR_SALE created.

SQL> 
SQL> ALTER TABLE drone_for_sale
  2      ADD CONSTRAINT warranty_period_constraint CHECK ( warranty_period BETWEEN 1 AND
  3      5 );

Table DRONE_FOR_SALE altered.

SQL> 
SQL> COMMENT ON COLUMN drone_for_sale.drone_id IS
  2      'Drone ID idetifies a unique drone.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN drone_for_sale.warranty_period IS
  2      'waranty period in years. between 1 to 5 years. ';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN drone_for_sale.selling_price IS
  2      'The price of the drone.';

Comment created.

SQL> 
SQL> ALTER TABLE drone_for_sale ADD CONSTRAINT drone_for_sale_pk PRIMARY KEY ( drone_id
  2  );

Table DRONE_FOR_SALE altered.

SQL> 
SQL> CREATE TABLE employee (
  2      emp_id           NUMBER(7) NOT NULL,
  3      emp_dob          DATE NOT NULL,
  4      emp_address      VARCHAR2(50) NOT NULL,
  5      rpl_no           NUMBER(7),
  6      emp_contact_no   CHAR(10) NOT NULL
  7  );

Table EMPLOYEE created.

SQL> 
SQL> COMMENT ON COLUMN employee.emp_id IS
  2      'Unique identifier for each employee.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN employee.emp_dob IS
  2      'Date of birth of employees. ';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN employee.emp_address IS
  2      'Employee''s address';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN employee.rpl_no IS
  2      'Remote pilot license number(not mandatory for all employees)';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN employee.emp_contact_no IS
  2      'mobile contact no. of employees.';

Comment created.

SQL> 
SQL> ALTER TABLE employee ADD CONSTRAINT employee_pk PRIMARY KEY ( emp_id );

Table EMPLOYEE altered.

SQL> 
SQL> CREATE TABLE individual (
  2      cust_id          NUMBER(7) NOT NULL,
  3      cust_gender      CHAR(1) NOT NULL,
  4      cust_age_range   NUMBER(3) NOT NULL
  5  );

Table INDIVIDUAL created.

SQL> 
SQL> ALTER TABLE individual
  2      ADD CONSTRAINT cust_gender_constraint CHECK ( cust_gender IN (
  3          'F',
  4          'M'
  5      ) );

Table INDIVIDUAL altered.

SQL> 
SQL> ALTER TABLE individual
  2      ADD CONSTRAINT cust_age_range_constraint CHECK ( cust_age_range BETWEEN 18 AND
  3      24
  4                                                       OR cust_age_range BETWEEN 25
  5                                                       AND 34
  6                                                       OR cust_age_range BETWEEN 35
  7                                                       AND 44
  8                                                       OR cust_age_range BETWEEN 45
  9                                                       AND 60
 10                                                       OR cust_age_range BETWEEN 61
 11                                                       AND 80
 12                                                       OR cust_age_range BETWEEN 81
 13                                                       AND 100 );

Table INDIVIDUAL altered.

SQL> 
SQL> COMMENT ON COLUMN individual.cust_id IS
  2      'unique identifier for a customer.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN individual.cust_gender IS
  2      'Gender - M/F';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN individual.cust_age_range IS
  2      'Age range of customer';

Comment created.

SQL> 
SQL> ALTER TABLE individual ADD CONSTRAINT individual_pk PRIMARY KEY ( cust_id );

Table INDIVIDUAL altered.

SQL> 
SQL> CREATE TABLE loan (
  2      loan_id          NUMBER(7) NOT NULL,
  3      loan_date_time   DATE NOT NULL,
  4      due_date_time    DATE NOT NULL,
  5      cust_id          NUMBER(7) NOT NULL
  6  );

Table LOAN created.

SQL> 
SQL> COMMENT ON COLUMN loan.loan_id IS
  2      'LOAN ID is unique to every loan they place.. ';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN loan.loan_date_time IS
  2      'The date and time of the loan placed.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN loan.due_date_time IS
  2      'The due to return the drones rented.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN loan.cust_id IS
  2      'unique identifier for a customer.';

Comment created.

SQL> 
SQL> ALTER TABLE loan ADD CONSTRAINT loan_pk PRIMARY KEY ( loan_id );

Table LOAN altered.

SQL> 
SQL> CREATE TABLE loan_line (
  2      loan_id    NUMBER(7) NOT NULL,
  3      drone_id   NUMBER(7) NOT NULL
  4  );

Table LOAN_LINE created.

SQL> 
SQL> COMMENT ON COLUMN loan_line.loan_id IS
  2      'LOAN ID is unique to every loan they place.. ';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN loan_line.drone_id IS
  2      'Drone ID idetifies a unique drone.';

Comment created.

SQL> 
SQL> ALTER TABLE loan_line ADD CONSTRAINT loan_line_pk PRIMARY KEY ( drone_id,
  2                                                                  loan_id );

Table LOAN_LINE altered.

SQL> 
SQL> CREATE TABLE order_line (
  2      order_id   NUMBER(7) NOT NULL,
  3      drone_id   NUMBER(7) NOT NULL
  4  );

Table ORDER_LINE created.

SQL> 
SQL> COMMENT ON COLUMN order_line.order_id IS
  2      'Order ID is unique for every order a customer makes. ';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN order_line.drone_id IS
  2      'Drone ID idetifies a unique drone.';

Comment created.

SQL> 
SQL> ALTER TABLE order_line ADD CONSTRAINT order_line_pk PRIMARY KEY ( order_id,
  2                                                                    drone_id );

Table ORDER_LINE altered.

SQL> 
SQL> CREATE TABLE orders (
  2      order_id        NUMBER(7) NOT NULL,
  3      order_date      DATE NOT NULL,
  4      order_balance   NUMBER(7,2) NOT NULL,
  5      cust_id         NUMBER(7) NOT NULL
  6  );

Table ORDERS created.

SQL> 
SQL> COMMENT ON COLUMN orders.order_id IS
  2      'Order ID is unique for every order a customer makes. ';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN orders.order_date IS
  2      'The date when the order was made. ';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN orders.order_balance IS
  2      'The total cost of the order.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN orders.cust_id IS
  2      'unique identifier for a customer.';

Comment created.

SQL> 
SQL> ALTER TABLE orders ADD CONSTRAINT order_pk PRIMARY KEY ( order_id );

Table ORDERS altered.

SQL> 
SQL> CREATE TABLE payment_instalment (
  2      pay_id            NUMBER(7) NOT NULL,
  3      pay_amount        NUMBER(5,2) NOT NULL,
  4      pay_description   VARCHAR2(100) NOT NULL,
  5      order_id          NUMBER(7),
  6      loan_id           NUMBER(7)
  7  );

Table PAYMENT_INSTALMENT created.

SQL> 
SQL> COMMENT ON COLUMN payment_instalment.pay_id IS
  2      'The pay_id is unique each  instalment payment made for a particular order or loan.'
  3  ;

Comment created.

SQL> 
SQL> COMMENT ON COLUMN payment_instalment.pay_amount IS
  2      'The payment made for every instalment. ';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN payment_instalment.pay_description IS
  2      'description to identify each instalment.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN payment_instalment.order_id IS
  2      'Order ID is unique for every order a customer makes. ';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN payment_instalment.loan_id IS
  2      'LOAN ID is unique to every loan they place.. ';

Comment created.

SQL> 
SQL> ALTER TABLE payment_instalment ADD CONSTRAINT payment_instalment_pk PRIMARY KEY (
  2  pay_id );

Table PAYMENT_INSTALMENT altered.

SQL> 
SQL> CREATE TABLE supplier (
  2      supplier_id   NUMBER NOT NULL,
  3      contact_no    CHAR(10) NOT NULL,
  4      address       VARCHAR2(50) NOT NULL
  5  );

Table SUPPLIER created.

SQL> 
SQL> COMMENT ON COLUMN supplier.supplier_id IS
  2      'Supplier''s ID';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN supplier.contact_no IS
  2      'Supplier contact number.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN supplier.address IS
  2      'Supplier''s Address';

Comment created.

SQL> 
SQL> ALTER TABLE supplier ADD CONSTRAINT supplier_pk PRIMARY KEY ( supplier_id );

Table SUPPLIER altered.

SQL> 
SQL> ALTER TABLE supplier ADD CONSTRAINT nk_supplier UNIQUE ( contact_no );

Table SUPPLIER altered.

SQL> 
SQL> CREATE TABLE training_activity (
  2      training_id            NUMBER(7) NOT NULL,
  3      emp_id                 NUMBER(7) NOT NULL,
  4      cust_id                NUMBER(7) NOT NULL,
  5      training_date_time     DATE NOT NULL,
  6      drone_id               NUMBER(7) NOT NULL,
  7      training_duration      NUMBER(5,2) NOT NULL,
  8      special_instructions   VARCHAR2(150)
  9  );

Table TRAINING_ACTIVITY created.

SQL> 
SQL> COMMENT ON COLUMN training_activity.training_id IS
  2      'Surrogate key for training activity.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN training_activity.emp_id IS
  2      'Unique identifier for each employee.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN training_activity.cust_id IS
  2      'unique identifier for a customer.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN training_activity.training_date_time IS
  2      'Date and time the activity takes place.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN training_activity.drone_id IS
  2      'Drone ID idetifies a unique drone.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN training_activity.training_duration IS
  2      'Duration of the activities in hours. ';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN training_activity.special_instructions IS
  2      'Employees may complete special tasks while conducting the training. ';

Comment created.

SQL> 
SQL> ALTER TABLE training_activity ADD CONSTRAINT trainig_activity_pk PRIMARY KEY ( training_id
  2  );

Table TRAINING_ACTIVITY altered.

SQL> 
SQL> ALTER TABLE training_activity
  2      ADD CONSTRAINT nk_training_activity UNIQUE ( emp_id,
  3                                                   cust_id,
  4                                                   training_date_time );

Table TRAINING_ACTIVITY altered.

SQL> 
SQL> ALTER TABLE loan
  2      ADD CONSTRAINT customer_makes_loan FOREIGN KEY ( cust_id )
  3          REFERENCES customer ( cust_id );

Table LOAN altered.

SQL> 
SQL> ALTER TABLE orders
  2      ADD CONSTRAINT customer_makes_order FOREIGN KEY ( cust_id )
  3          REFERENCES customer ( cust_id );

Table ORDERS altered.

SQL> 
SQL> ALTER TABLE training_activity
  2      ADD CONSTRAINT customer_requests_training FOREIGN KEY ( cust_id )
  3          REFERENCES customer ( cust_id );

Table TRAINING_ACTIVITY altered.

SQL> 
SQL> ALTER TABLE loan_line
  2      ADD CONSTRAINT drone_has_loan_line FOREIGN KEY ( drone_id )
  3          REFERENCES drone_for_rent ( drone_id );

Table LOAN_LINE altered.

SQL> 
SQL> ALTER TABLE order_line
  2      ADD CONSTRAINT drone_has_order_line FOREIGN KEY ( drone_id )
  3          REFERENCES drone_for_sale ( drone_id );

Table ORDER_LINE altered.

SQL> 
SQL> ALTER TABLE training_activity
  2      ADD CONSTRAINT drone_used_for_training FOREIGN KEY ( drone_id )
  3          REFERENCES drone ( drone_id );

Table TRAINING_ACTIVITY altered.

SQL> 
SQL> ALTER TABLE training_activity
  2      ADD CONSTRAINT employee_carries_out_training FOREIGN KEY ( emp_id )
  3          REFERENCES employee ( emp_id );

Table TRAINING_ACTIVITY altered.

SQL> 
SQL> ALTER TABLE business
  2      ADD CONSTRAINT fk_business_customer FOREIGN KEY ( cust_id )
  3          REFERENCES customer ( cust_id );

Table BUSINESS altered.

SQL> 
SQL> ALTER TABLE drone_for_rent
  2      ADD CONSTRAINT fk_drone_drone_for_rent FOREIGN KEY ( drone_id )
  3          REFERENCES drone ( drone_id );

Table DRONE_FOR_RENT altered.

SQL> 
SQL> ALTER TABLE drone_for_sale
  2      ADD CONSTRAINT fk_drone_dront_for_sale FOREIGN KEY ( drone_id )
  3          REFERENCES drone ( drone_id );

Table DRONE_FOR_SALE altered.

SQL> 
SQL> ALTER TABLE individual
  2      ADD CONSTRAINT fk_individual_customer FOREIGN KEY ( cust_id )
  3          REFERENCES customer ( cust_id );

Table INDIVIDUAL altered.

SQL> 
SQL> ALTER TABLE loan_line
  2      ADD CONSTRAINT loan_has_loan_line FOREIGN KEY ( loan_id )
  3          REFERENCES loan ( loan_id );

Table LOAN_LINE altered.

SQL> 
SQL> ALTER TABLE payment_instalment
  2      ADD CONSTRAINT loan_has_payment_instament FOREIGN KEY ( loan_id )
  3          REFERENCES loan ( loan_id );

Table PAYMENT_INSTALMENT altered.

SQL> 
SQL> ALTER TABLE order_line
  2      ADD CONSTRAINT order_has_order_line FOREIGN KEY ( order_id )
  3          REFERENCES orders ( order_id );

Table ORDER_LINE altered.

SQL> 
SQL> ALTER TABLE payment_instalment
  2      ADD CONSTRAINT order_has_payment_instalment FOREIGN KEY ( order_id )
  3          REFERENCES orders ( order_id );

Table PAYMENT_INSTALMENT altered.

SQL> 
SQL> ALTER TABLE drone
  2      ADD CONSTRAINT supplier_supplies_drone FOREIGN KEY ( supplier_id )
  3          REFERENCES supplier ( supplier_id );

Table DRONE altered.

SQL> 
SQL> CREATE OR REPLACE TRIGGER arc_fk_customer_sub_individual BEFORE
  2      INSERT OR UPDATE OF cust_id ON individual
  3      FOR EACH ROW
  4  DECLARE
  5      d   CHAR(1);
  6  BEGIN
  7      SELECT
  8          a.cust_type
  9      INTO d
 10      FROM
 11          customer a
 12      WHERE
 13          a.cust_id =:new.cust_id;
 14  
 15      IF ( d IS NULL OR d <> 'I' ) THEN
 16          raise_application_error(-20223,'FK FK_INDIVIDUAL_CUSTOMER in Table INDIVIDUAL violates Arc constraint on Table CUSTOMER - discriminator column cust_type doesn''t have value ''I'''
 17          );
 18      END IF;
 19  
 20  EXCEPTION
 21      WHEN no_data_found THEN
 22          NULL;
 23      WHEN OTHERS THEN
 24          RAISE;
 25  END;
 26  /

Trigger ARC_FK_CUSTOMER_SUB_INDIVIDUAL compiled

SQL> 
SQL> CREATE OR REPLACE TRIGGER arc_fk_customer_subty_business BEFORE
  2      INSERT OR UPDATE OF cust_id ON business
  3      FOR EACH ROW
  4  DECLARE
  5      d   CHAR(1);
  6  BEGIN
  7      SELECT
  8          a.cust_type
  9      INTO d
 10      FROM
 11          customer a
 12      WHERE
 13          a.cust_id =:new.cust_id;
 14  
 15      IF ( d IS NULL OR d <> 'B' ) THEN
 16          raise_application_error(-20223,'FK FK_BUSINESS_CUSTOMER in Table BUSINESS violates Arc constraint on Table CUSTOMER - discriminator column cust_type doesn''t have value ''B'''
 17          );
 18      END IF;
 19  
 20  EXCEPTION
 21      WHEN no_data_found THEN
 22          NULL;
 23      WHEN OTHERS THEN
 24          RAISE;
 25  END;
 26  /

Trigger ARC_FK_CUSTOMER_SUBTY_BUSINESS compiled

SQL> 
SQL> CREATE SEQUENCE cust_id_sequence START WITH 100 NOCACHE ORDER;

Sequence CUST_ID_SEQUENCE created.

SQL> 
SQL> CREATE SEQUENCE drone_id_sequence START WITH 100 NOCACHE ORDER;

Sequence DRONE_ID_SEQUENCE created.

SQL> 
SQL> CREATE SEQUENCE emp_id_sequence START WITH 100 NOCACHE ORDER;

Sequence EMP_ID_SEQUENCE created.

SQL> 
SQL> CREATE SEQUENCE loan_id_sequence START WITH 100 NOCACHE ORDER;

Sequence LOAN_ID_SEQUENCE created.

SQL> 
SQL> CREATE SEQUENCE order_id_sequence START WITH 100 NOCACHE ORDER;

Sequence ORDER_ID_SEQUENCE created.

SQL> 
SQL> CREATE SEQUENCE pay_id_sequence START WITH 100 NOCACHE ORDER;

Sequence PAY_ID_SEQUENCE created.

SQL> 
SQL> CREATE SEQUENCE supplier_id_sequence START WITH 100 NOCACHE ORDER;

Sequence SUPPLIER_ID_SEQUENCE created.

SQL> 
SQL> CREATE SEQUENCE training_id_sequence START WITH 100 NOCACHE ORDER;

Sequence TRAINING_ID_SEQUENCE created.

SQL> 
SQL> 
SQL> 
SQL> -- Oracle SQL Developer Data Modeler Summary Report: 
SQL> -- 
SQL> -- CREATE TABLE                            14
SQL> -- CREATE INDEX                             0
SQL> -- ALTER TABLE                             39
SQL> -- CREATE VIEW                              0
SQL> -- ALTER VIEW                               0
SQL> -- CREATE PACKAGE                           0
SQL> -- CREATE PACKAGE BODY                      0
SQL> -- CREATE PROCEDURE                         0
SQL> -- CREATE FUNCTION                          0
SQL> -- CREATE TRIGGER                           2
SQL> -- ALTER TRIGGER                            0
SQL> -- CREATE COLLECTION TYPE                   0
SQL> -- CREATE STRUCTURED TYPE                   0
SQL> -- CREATE STRUCTURED TYPE BODY              0
SQL> -- CREATE CLUSTER                           0
SQL> -- CREATE CONTEXT                           0
SQL> -- CREATE DATABASE                          0
SQL> -- CREATE DIMENSION                         0
SQL> -- CREATE DIRECTORY                         0
SQL> -- CREATE DISK GROUP                        0
SQL> -- CREATE ROLE                              0
SQL> -- CREATE ROLLBACK SEGMENT                  0
SQL> -- CREATE SEQUENCE                          8
SQL> -- CREATE MATERIALIZED VIEW                 0
SQL> -- CREATE MATERIALIZED VIEW LOG             0
SQL> -- CREATE SYNONYM                           0
SQL> -- CREATE TABLESPACE                        0
SQL> -- CREATE USER                              0
SQL> -- 
SQL> -- DROP TABLESPACE                          0
SQL> -- DROP DATABASE                            0
SQL> -- 
SQL> -- REDACTION POLICY                         0
SQL> -- 
SQL> -- ORDS DROP SCHEMA                         0
SQL> -- ORDS ENABLE SCHEMA                       0
SQL> -- ORDS ENABLE OBJECT                       0
SQL> -- 
SQL> -- ERRORS                                   0
SQL> -- WARNINGS                                 0
SQL> 
SQL> spool off;
